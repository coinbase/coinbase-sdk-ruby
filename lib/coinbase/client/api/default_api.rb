=begin
#Coinbase Platform API

#This is the OpenAPI 3.0 specification for the Coinbase Platform APIs, used in conjunction with the Coinbase Platform SDKs.

The version of the OpenAPI document: 0.0.1-alpha
Contact: yuga.cohler@coinbase.com
Generated by: https://openapi-generator.tech
Generator version: 7.6.0

=end

require 'cgi'

module Coinbase::Client
  class DefaultApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Build a new send
    # Build a new send
    # @param network_id [String] The ID of the network the address belongs to
    # @param address_id [String] The ID of the address to send from
    # @param amount [String] The amount to send
    # @param asset_id [String] The ID of the asset to send
    # @param destination [String] The destination address the asset is being sent to
    # @param [Hash] opts the optional parameters
    # @option opts [String] :wallet_id The optional ID of the wallet the address belongs to. If the address is an external address, this field is not required.
    # @return [ModelSend]
    def build_send(network_id, address_id, amount, asset_id, destination, opts = {})
      data, _status_code, _headers = build_send_with_http_info(network_id, address_id, amount, asset_id, destination, opts)
      data
    end

    # Build a new send
    # Build a new send
    # @param network_id [String] The ID of the network the address belongs to
    # @param address_id [String] The ID of the address to send from
    # @param amount [String] The amount to send
    # @param asset_id [String] The ID of the asset to send
    # @param destination [String] The destination address the asset is being sent to
    # @param [Hash] opts the optional parameters
    # @option opts [String] :wallet_id The optional ID of the wallet the address belongs to. If the address is an external address, this field is not required.
    # @return [Array<(ModelSend, Integer, Hash)>] ModelSend data, response status code and response headers
    def build_send_with_http_info(network_id, address_id, amount, asset_id, destination, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DefaultApi.build_send ...'
      end
      # verify the required parameter 'network_id' is set
      if @api_client.config.client_side_validation && network_id.nil?
        fail ArgumentError, "Missing the required parameter 'network_id' when calling DefaultApi.build_send"
      end
      # verify the required parameter 'address_id' is set
      if @api_client.config.client_side_validation && address_id.nil?
        fail ArgumentError, "Missing the required parameter 'address_id' when calling DefaultApi.build_send"
      end
      # verify the required parameter 'amount' is set
      if @api_client.config.client_side_validation && amount.nil?
        fail ArgumentError, "Missing the required parameter 'amount' when calling DefaultApi.build_send"
      end
      # verify the required parameter 'asset_id' is set
      if @api_client.config.client_side_validation && asset_id.nil?
        fail ArgumentError, "Missing the required parameter 'asset_id' when calling DefaultApi.build_send"
      end
      # verify the required parameter 'destination' is set
      if @api_client.config.client_side_validation && destination.nil?
        fail ArgumentError, "Missing the required parameter 'destination' when calling DefaultApi.build_send"
      end
      # resource path
      local_var_path = '/v1/networks/{network_id}/addresses/{address_id}/sends/build'.sub('{' + 'network_id' + '}', CGI.escape(network_id.to_s)).sub('{' + 'address_id' + '}', CGI.escape(address_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'amount'] = amount
      query_params[:'asset_id'] = asset_id
      query_params[:'destination'] = destination
      query_params[:'wallet_id'] = opts[:'wallet_id'] if !opts[:'wallet_id'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'ModelSend'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"DefaultApi.build_send",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DefaultApi#build_send\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
